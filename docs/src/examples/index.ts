export const examples = {
  "0000_overview": {
    cmpt: require('./0000_overview'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, FirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example"
  },"0010_field": {
    cmpt: require('./0010_field'),
    content: "import React, { useState } from 'react'\nimport { field } from '@zecos/field'\nimport { validateName } from \"@zecos/validate\"\n\nconst renderErrors = state => {\n  const {touched, errors} = state\n  if (touched && errors.length) {\n    return (\n      <span style={{color: \"red\"}}>\n        {errors.map(err => <div>{err.toString()}</div>)}\n      </span>\n    )\n  }\n}\n\nconst Form = () => {\n  const [[actions, state], _setFormState] = useState(() => {\n    const _field = field({\n      init: '',\n      validate: validateName,\n    })\n    return [_field, _field.getState()]\n  })\n  \n  const {\n    setValue,\n    setTouched,\n    reset,\n    setState,\n    getState\n  } = actions\n  \n  const setFormState = state => _setFormState([actions, state])\n  \n  const {\n    errors,\n    value,\n    touched,\n    pristine\n  } = actions.getState()\n  \n  return (\n    <form style={{padding: 20}}>\n      <label htmlFor=\"name\">Name: </label>&nbsp;\n      <input\n        name=\"name\"\n        value={value}\n        onChange={e => setFormState(setValue(e.target.value))}\n        onBlur={_ => setFormState(setTouched())}\n      />\n      <br />\n      {renderErrors(state)}\n    </form>\n  )\n}\n\nexport default Form\n"
  },"0020_create-input": {
    cmpt: require('./0020_create-input'),
    content: "import React from \"react\"\nimport { createInput } from '@zecos/input'\nimport { validateName } from \"@zecos/validate\"\n\nconst text = createInput(({helpers, state}) => {\n    const {\n      id,\n      name,\n      label,\n      handleChange,\n      handleBlur,\n    } = helpers\n    \n    const {touched, errors, value} = state\n    return (\n      <div>\n        <label htmlFor={name}>\n          {label}: &nbsp;\n        {touched && errors[0] && errors[0].toString()}\n        </label>\n        <input\n          name={name}\n          aria-label={label}\n          onChange={handleChange}\n          value={value}\n          onBlur={handleBlur}\n          id={id}\n        />\n      </div> \n    )\n})\n\nconst Form = () => {\n  const {FirstName, FirstNameDisplay} = text({\n    name: \"firstName\",\n    validate: validateName,\n    init: \"Bob\",\n  })\n\n  return (\n    <form className=\"form\">\n      <FirstName /><br />\n      <FirstNameDisplay full={true} />\n    </form> \n  )\n}\n\nexport default Form"
  },"0030_create-input-select": {
    cmpt: require('./0030_create-input-select'),
    content: "import React from 'react'\nimport { createInput } from '@zecos/input'\n\nconst renderOption = ([key, label]) => {\n  return (\n    <option key={key} value={key}>\n      {label}\n    </option>\n  )\n}\n\nexport const select = createInput(({helpers, props}) => {\n  const {\n    id,\n    name,\n    value,\n    handleChange,\n    handleBlur,\n    label,\n    htmlFor,\n  } = helpers\n\n  return (\n    <div>\n      <label htmlFor={htmlFor}>\n        {label}: &nbsp;\n      </label>\n      <select\n        onChange={handleChange}\n        onBlur={handleBlur}\n        name={name}\n        id={id}\n        value={value}\n        aria-label={label}\n      >\n        {Object.entries(props.options).map(renderOption)}\n      </select>\n    </div>\n  )\n})\n\nexport const Form = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = select({\n    init: \"blue\",\n    name: \"favoriteColor\",\n    props: {\n     options: {green: \"Green\", blue: \"Blue\"} \n    }\n  })\n\n  return (\n    <form className=\"form\">\n      <FavoriteColor options={{blue: \"Blue\", red: \"Red\"}} />\n      <FavoriteColorDisplay />\n    </form>\n  )\n}\n\nexport default Form"
  },"0040_create-layout": {
    cmpt: require('./0040_create-layout'),
    content: "import React from 'react'\nimport { createLayout } from \"@zecos/input\"\nimport { Text, Select, TextArea } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\n  return (\n    <form {...props}>\n      <div>{helpers.title}</div>\n      {errors[0] && errors[0].toString()}\n      {items.map((Input, i) => (\n        <span key={i}><Input.Cmpt key={i} /></span>\n      ))}\n    </form>\n  )\n})\n\nconst Example = () => {\n  const { Form, FormDisplay } = SimpleFormLayout({\n    name: 'form',\n    items: [\n      Text({\n        validate: validateName,\n        name: \"firstName\",\n        init: \"Zane\",\n      }),\n      TextArea({\n        name: \"describeYourself\"\n      }),\n      Select({\n        init: \"blue\",\n        name: \"favoriteColor\",\n        props: {\n          options: {\n            \"Blue\": \"blue\",\n            \"Red\": \"red\",\n          }\n        }\n      })\n    ],\n    validate: (items:any) => {\n      if (items[0].state.value === \"Zane\") {\n        return [new Error(\"Name cannot be Zane\")]\n      }\n      return []\n    }\n  })\n  \n  return (\n    <div>\n      <Form />\n      <FormDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0050_create-multi": {
    cmpt: require('./0050_create-multi'),
    content: "import React from 'react'\nimport { createMulti } from '@zecos/input'\nimport { Text, GroupLayout } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst Multi:any = createMulti(({items, actions, helpers}) => {\n  return <>\n    {items.map((Input, i) => (\n      <div key={i}>\n      <Input.Cmpt />\n      <button\n        style={{display: \"block\"}}\n        onClick={() => actions.splice(i, 1)}\n      >\n        Remove Person\n      </button>\n      </div>\n    ))}\n  </>\n})\n\nconst newPerson = () => GroupLayout({\n  name: 'person',\n  items: [\n    Text({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    Text({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, People, PeopleDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"people\",\n  })\n  \n  return <div>\n      <People />\n      <PeopleDisplay />\n      <button\n        type=\"button\"\n        onClick={() => actions.push(newPerson)}\n      >\n        Add Person\n      </button>\n    </div>\n}\n\n\nexport default MultiForm\n"
  },"0060_text-input": {
    cmpt: require('./0060_text-input'),
    content: "import React from \"react\"\nimport { validateName } from \"@zecos/validate\"\nimport { TextInput} from \"@zecos/input-mui\"\n\nconst TextInputExample = () => {\n  const {FirstName, FirstNameDisplay} = TextInput({\n    validate: validateName,\n    init: '',\n    name: \"firstName\"\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FirstName />\n      <FirstNameDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default TextInputExample"
  },"0070_select-input": {
    cmpt: require('./0070_select-input'),
    content: "import React from \"react\"\nimport { SelectInput } from \"@zecos/input-mui\"\n\nconst SelectInputExample = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\n    init: \"blue\",\n    name: \"favoriteColor\",\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FavoriteColor options={{\n        Blue: \"blue\",\n        Red: \"red\",\n      }}/>\n      <FavoriteColorDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default SelectInputExample\n"
  },"0080_library-general": {
    cmpt: require('./0080_library-general'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, Cmpt} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <Cmpt /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example"
  },"0090_library-replaced": {
    cmpt: require('./0090_library-replaced'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  console.log(\"display\", Display)\n  \n  return (\n    <>\n      <FirstName />\n      <Cmpt />  {/* same as above line */}\n      <Display full={true} />\n      <FirstNameDisplay full={true} /> {/* same as above line */}\n      <FirstNameDisplay /> {/* Without the \"full\" property, it just gets the value */}\n    </>\n  )\n}\n\nexport default Example"
  },"0100_library-logging": {
    cmpt: require('./0100_library-logging'),
    content: "import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\nimport { Button } from '@material-ui/core'\n\n\nconst Example = () => {\n  const {FirstName, Display, log, logFirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName />\n      <Display />\n      <br />\n      <Button variant=\"contained\" onClick={log}>Log First Name Data</Button>\n      <br />\n      <br />\n      <div>These two buttons are equivalent. Check the console.</div>\n      <br />\n      <Button variant=\"contained\" onClick={logFirstName}>Log First Name Data</Button>\n    </>\n  )\n}\n\nexport default Example"
  },"0110_basic-text": {
    cmpt: require('./0110_basic-text'),
    content: "import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { Text } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FirstName, FirstNameDisplay } = Text({\n    validate: validateName,\n    init: 'Harry',\n    name: \"firstName\"\n  })\n\n  return (\n    <div>\n      <FirstName />\n      <FirstNameDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0120_basic-textarea": {
    cmpt: require('./0120_basic-textarea'),
    content: "import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { TextArea } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { DescribeYourself, DescribeYourselfDisplay } = TextArea({\n    validate: validateName,\n    init: 'I am a pretty cool dude...',\n    name: \"describeYourself\"\n  })\n\n  return (\n    <div>\n      <DescribeYourself />\n      <DescribeYourselfDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0130_basic-select": {
    cmpt: require('./0130_basic-select'),
    content: "import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { Select } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FavoriteColor, FavoriteColorDisplay } = Select({\n    init: 'blue',\n    name: \"favoriteColor\"\n  })\n\n  return (\n    <div>\n      <FavoriteColor\n        options={{\n          \"Red\": \"red\",\n          \"Blue\": \"blue\",\n          \"Purple\": \"purple\",\n          \"Black\": \"black\",\n        }}\n      />\n      <FavoriteColorDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0140_basic-slider": {
    cmpt: require('./0140_basic-slider'),
    content: "import React from 'react'\nimport { Slider } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { Angle, AngleDisplay } = Slider({\n    init: 0,\n    name: \"angle\"\n  })\n\n  return (\n    <div>\n      <Angle\n        min=\"0\"\n        max=\"90\"\n        step=\"0.5\"\n      />\n      <AngleDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0150_basic-checkbox": {
    cmpt: require('./0150_basic-checkbox'),
    content: "import React from 'react'\nimport { Checkbox } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { Cool, CoolDisplay } = Checkbox({\n    init: true,\n    name: \"cool\",\n    label: \"I am cool\",\n  })\n\n  return (\n    <div>\n      <Cool />\n      <CoolDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0160_basic-radio": {
    cmpt: require('./0160_basic-radio'),
    content: "import React from 'react'\nimport { Radio } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FavoriteFlavorOfIceCream, FavoriteFlavorOfIceCreamDisplay } = Radio({\n    init: 'chocolate',\n    name: \"favoriteFlavorOfIceCream\"\n  })\n\n  return (\n    <div>\n      <FavoriteFlavorOfIceCream\n        options={{\n          \"Rocky Road\": \"rockyroad\",\n          \"Chocolate\": \"chocolate\",\n          \"Vanilla\": \"vanilla\",\n        }}\n      />\n      <FavoriteFlavorOfIceCreamDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0170_basic-group-layout": {
    cmpt: require('./0170_basic-group-layout'),
    content: "import React from 'react'\nimport { Checkbox, GroupLayout } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      Checkbox({\n        name: \"blink182\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"sum41\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"redHotChiliPeppers\",\n        init: false,\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n  \n  return (\n    <div>\n      <BandsILike />\n      <br />\n      <BandsILikeDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0180_basic-simple-form-layout": {
    cmpt: require('./0180_basic-simple-form-layout'),
    content: "import React from 'react'\nimport { Checkbox, SimpleFormLayout, GroupLayout, Text, TextArea,\n  Select, Slider, Radio } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst Example = () => {\n  const bands = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      Checkbox({\n        name: \"blink182\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"sum41\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"redHotChiliPeppers\",\n        init: false,\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n  \n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\n    name: \"myForm\",\n    items: [\n      Text({\n        name: \"firstName\",\n        init: \"Fred\",\n      }),\n      TextArea({\n        validate: validateName,\n        init: 'I am a pretty cool dude...',\n        name: \"describeYourself\"\n      }),\n      Select({\n        init: 'blue',\n        name: \"favoriteColor\",\n        props: {\n          options: {\n            \"Red\": \"red\",\n            \"Blue\": \"blue\",\n            \"Purple\": \"purple\",\n            \"Black\": \"black\",\n          }\n        }\n      }),\n      Slider({\n        init: 0,\n        name: \"angle\"\n      }),\n      Checkbox({\n        init: false,\n        name: \"pottyTrained\"\n      },\n      Radio({\n        init: 'chocolate',\n        name: \"favoriteFlavorOfIceCream\",\n        props: {\n          options: {\n            \"Rocky Road\": \"rockyroad\",\n            \"Chocolate\": \"chocolate\",\n            \"Vanilla\": \"vanilla\",\n          }\n        }\n      })),\n      bands,\n    ]\n  })\n  \n  return (\n    <div>\n      <MyForm\n        onSubmit={e => {\n          e.preventDefault()\n          window.alert(\"submitted!\")\n        }}\n      />\n      <br />\n      <MyFormDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0190_basic-multi": {
    cmpt: require('./0190_basic-multi'),
    content: "import React from 'react'\nimport { Text, GroupLayout, Multi } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst newPerson = () => GroupLayout({\n  name: 'person',\n  items: [\n    Text({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    Text({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, People, PeopleDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"people\",\n  })\n  \n  return <div>\n      <People />\n      <PeopleDisplay />\n      <button type=\"button\" onClick={() => actions.push(newPerson)}>Add Person</button>\n    </div>\n}\n\n\nexport default MultiForm\n"
  },"0200_mui-radio": {
    cmpt: require('./0200_mui-radio'),
    content: "import React from \"react\"\nimport { RadioInput} from \"@zecos/input-mui\"\n\nconst Example = () => {\n  const {FavoriteFlavor, FavoriteFlavorDisplay} = RadioInput({\n    init: \"rockyroad\",\n    name: \"favoriteFlavor\",\n    label: \"Favorite Flavor of Ice Cream\",\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FavoriteFlavor\n        options={{\n          \"Rocky Road\": \"rockyroad\",\n          Chocolate: \"chocolate\",\n          Vanilla: \"vanilla\",\n        }}\n      />\n      <FavoriteFlavorDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default Example"
  },"0210_mui-checkbox": {
    cmpt: require('./0210_mui-checkbox'),
    content: "import React from 'react'\nimport { CheckboxInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const { Cool, CoolDisplay } = CheckboxInput({\n    init: true,\n    name: \"cool\",\n    label: \"I am cool\",\n  })\n\n  return (\n    <div>\n      <Cool />\n      <CoolDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0220_mui-switch": {
    cmpt: require('./0220_mui-switch'),
    content: "import React from 'react'\nimport { SwitchInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const {Light, LightDisplay, state } = SwitchInput({\n    init: false,\n    name: \"light\",\n  })\n  \n  const style = {\n    background: state.value ? \"yellow\" : \"black\",\n    color: state.value ? \"black\" : \"white\",\n    padding: 15,\n    borderRadius: 4,\n  }\n\n  return (\n    <div style={style}>\n      <Light />\n      <LightDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0230_mui-slider": {
    cmpt: require('./0230_mui-slider'),
    content: "import React from 'react'\nimport { SliderInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const {Temperature, TemperatureDisplay} = SliderInput({\n    init: 30,\n    name: 'temperature',\n    props: {\n      min: 0,\n      max: 100,\n      step: 10,\n      marks: [...new Array(11)]\n        .map((_, num) => ({\n          label: `${num * 10}°C`,\n          value: num * 10\n        })),\n    }\n  })\n  \n  const {TemperatureVertical, TemperatureVerticalDisplay} = SliderInput({\n    init: 30,\n    name: 'temperatureVertical',\n    props: {\n      min: 0,\n      max: 100,\n      step: 10,\n      orientation: \"vertical\",\n      marks: [...new Array(11)]\n        .map((_, num) => ({\n          label: `${num * 10}°C`,\n          value: num * 10\n        })),\n    }\n  })\n\n  return (\n    <div>\n      <Temperature />\n      <br />\n      <TemperatureVertical />\n      <TemperatureDisplay />\n      <TemperatureVerticalDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0240_mui-group-layout": {
    cmpt: require('./0240_mui-group-layout'),
    content: "import React from 'react'\nimport { CheckboxInput, GroupLayout } from '@zecos/input-mui'\n\nconst Example = () => {\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      CheckboxInput({\n        init: false,\n        name: \"systemOfADown\",\n      }),\n      CheckboxInput({\n        init: false,\n        name: \"blink182\",\n      }),\n      CheckboxInput({\n        init: false,\n        name: \"sum41\"\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => (\n        acc + Number(item.state.value)\n      ), 0)\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n\n  return (\n    <div>\n      <BandsILike />\n      <br />\n      <BandsILikeDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0250_mui-simple-form-layout": {
    cmpt: require('./0250_mui-simple-form-layout'),
    content: "import React from 'react'\nimport {\n  TextInput,\n  SelectInput,\n  RadioInput,\n  CheckboxInput,\n  GroupLayout,\n  SimpleFormLayout,\n  SwitchInput,\n  SliderInput,\n} from '@zecos/input-mui'\nimport { validateName } from '@zecos/validate'\n\nconst Example = () => {\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\n    name: \"myForm\",\n    items: [\n      TextInput({\n        validate: validateName,\n        init: '',\n        name: \"firstName\"\n      }),\n      TextInput({\n        validate: validateName,\n        init: '',\n        name: \"lastName\"\n      }),\n      SelectInput({\n        init: \"blue\",\n        name: \"favoriteColor\",\n        label: \"What is your favorite color?\",\n        props: {\n          options: {\n            Blue: \"blue\",\n            Red: \"red\",\n            Pink: \"pink\",\n            Purple: \"purple\",\n          }\n        }\n      }),\n      RadioInput({\n        init: \"rockyroad\",\n        name: \"favoriteFlavor\",\n        label: \"Favorite Flavor of Ice Cream\",\n        props: {\n          options: {\n            \"Rocky Road\": \"rockyroad\",\n            Chocolate: \"chocolate\",\n            Vanilla: \"vanilla\",\n          }\n        },\n      }),\n      CheckboxInput({\n        init: true,\n        name: \"cool\",\n        label: \"I am cool\",\n      }),\n      SwitchInput({\n        init: false,\n        name: \"light\",\n      }),\n      SliderInput({\n        init: 30,\n        name: 'temperatureVertical',\n        props: {\n          min: 0,\n          max: 100,\n          step: 10,\n          marks: [...new Array(11)]\n            .map((_, num) => ({\n              label: `${num * 10}°C`,\n              value: num * 10\n            })),\n        }\n      }),\n      GroupLayout({\n        name: \"bandsILike\",\n        items: [\n          CheckboxInput({\n            init: false,\n            name: \"systemOfADown\",\n          }),\n          CheckboxInput({\n            init: false,\n            name: \"blink182\",\n          }),\n          CheckboxInput({\n            init: false,\n            name: \"sum41\"\n          }),\n        ],\n        validate: (items) => {\n          const totalLiked = items.reduce((acc, item) => (\n            acc + Number(item.state.value)\n          ), 0)\n          if (totalLiked > 2) {\n            return [new Error(\"Pick no more than 2.\")]\n          }\n          return []\n        }\n      })\n    ],\n  })\n  \n  const handleSubmit = e => {\n    e.preventDefault()\n    window.alert(\"Submitted sucessfully!\")\n  }\n  \n  return (\n    <div>\n      <MyForm onSubmit={handleSubmit} />\n      <br />\n      <MyFormDisplay />\n    </div>\n  )\n}\n\nexport default Example"
  },"0260_mui-multi": {
    cmpt: require('./0260_mui-multi'),
    content: "import React from 'react'\nimport { TextInput, GroupLayout, Multi } from '@zecos/input-mui'\nimport { Button } from \"@material-ui/core\"\nimport { validateName } from '@zecos/validate'\n\nconst newPerson = () => GroupLayout({\n  name: 'friend',\n  items: [\n    TextInput({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    TextInput({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, Friends, FriendsDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"friends\",\n  })\n  \n  return <div>\n      <Friends />\n      <br />\n      <Button\n        type=\"button\"\n        variant=\"outlined\"\n        onClick={() => actions.push(newPerson)}\n      >\n        Add Person\n      </Button>\n      <br />\n      <br />\n      <FriendsDisplay />\n    </div>\n}\n\nexport default MultiForm"
  },"0270_mui-date-picker": {
    cmpt: require('./0270_mui-date-picker'),
    content: "import React from 'react'\nimport { DatePickerInput } from '@zecos/input-picker'\n\nconst MultiForm = () => {\n  const {AppointmentDate, AppointmentDateDisplay} = DatePickerInput({\n    init: new Date,\n    name: 'appointmentDate'\n  })\n  \n  return <div>\n    <AppointmentDate />\n    <AppointmentDateDisplay />\n    </div>\n}\n\nexport default MultiForm"
  },"0280_mui-time-picker": {
    cmpt: require('./0280_mui-time-picker'),
    content: "import React from 'react'\nimport { TimePickerInput } from '@zecos/input-picker'\n\nconst MultiForm = () => {\n  const {AppointmentTime, AppointmentTimeDisplay} = TimePickerInput({\n    init: new Date,\n    name: 'appointmentTime'\n  })\n  \n  return <div>\n    <AppointmentTime />\n    <AppointmentTimeDisplay />\n    </div>\n}\n\nexport default MultiForm"
  }
}